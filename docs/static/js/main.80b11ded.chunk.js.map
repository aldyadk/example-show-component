{"version":3,"sources":["component/RemovableText.js","App.js","reportWebVitals.js","index.js"],"names":["RemovableText","text","variant","show","setShow","style","display","justifyContent","padding","margin","border","borderRadius","type","cursor","fontWeight","onClick","defaultProps","App","useState","showComp1","setShowComp1","showComp2","setShowComp2","showComp3","setShowComp3","showComp4","setShowComp4","maxWidth","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAGMA,EAAgB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAa5C,OACED,GAAQ,sBAAKE,MAVQ,CACrBC,QAAS,OACTC,eAAgB,gBAChBC,QAAS,EACTC,OAAQ,EACRC,OAAQ,kBACRC,aAAc,GAIN,UACO,OAAZT,EACC,oBAAIG,MAAO,CAAEI,OAAQ,GAArB,SAA2BR,IAE3B,mBAAGI,MAAO,CAAEI,OAAQ,GAApB,SAA0BR,IAE5B,wBAAQW,KAAK,SAASP,MAAO,CAAEQ,OAAQ,UAAWC,WAAY,QAAUC,QAlBxD,kBAAMX,GAAQ,IAkB9B,mBAYNJ,EAAcgB,aAAe,CAC3Bf,KAAM,GACNC,QAAS,KAGIF,QCrBAiB,EAhBH,WACV,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKrB,MAAO,CAACI,OAAQ,OAAQkB,SAAU,OAAQC,UAAW,QAA1D,UACGT,EAAY,cAAC,EAAD,CAAehB,KAAMgB,EAAWf,QAASgB,EAAclB,QAAQ,IAAID,KAAK,sBAAyB,8BAAK,wBAAQc,QAAS,kBAAIK,GAAa,IAAlC,gCAClHC,EAAY,cAAC,EAAD,CAAelB,KAAMkB,EAAWjB,QAASkB,EAAepB,QAAQ,KAAKD,KAAK,eAAkB,8BAAK,wBAAQc,QAAS,kBAAIO,GAAa,IAAlC,gCAC7GC,EAAY,cAAC,EAAD,CAAepB,KAAMoB,EAAWnB,QAASoB,EAActB,QAAQ,IAAID,KAAK,sBAAyB,8BAAK,wBAAQc,QAAS,kBAAIS,GAAa,IAAlC,gCAClHC,EAAY,cAAC,EAAD,CAAetB,KAAMsB,EAAWrB,QAASsB,EAAexB,QAAQ,KAAKD,KAAK,eAAkB,8BAAK,wBAAQc,QAAS,kBAAIW,GAAa,IAAlC,oCCFrGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.80b11ded.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst RemovableText = ({ text, variant, show, setShow }) => {\n\n  const handleClose = () => setShow(false)\n\n  const containerStyle = { \n    display: 'flex', \n    justifyContent: 'space-between', \n    padding: 5, \n    margin: 5,\n    border: '1px solid black', \n    borderRadius: 4, \n  }\n\n  return (\n    show && <div style={containerStyle}>\n      {variant === 'h4' ? (\n        <h4 style={{ margin: 0 }}>{text}</h4>\n      ) : (\n        <p style={{ margin: 0 }}>{text}</p>\n      )}\n      <button type=\"button\" style={{ cursor: 'pointer', fontWeight: 'bold' }} onClick={handleClose}>x</button>\n    </div>\n  )\n}\n\nRemovableText.propTypes = {\n  text: PropTypes.string,\n  variant: PropTypes.string,\n  show: PropTypes.bool.isRequired,\n  variasetShownt: PropTypes.func.isRequired,\n}\n\nRemovableText.defaultProps = {\n  text: '',\n  variant: 'p',\n}\n\nexport default RemovableText\n","import { useState } from 'react'\nimport RemovableText from './component/RemovableText'\n\nconst App = () => {\n  const [showComp1, setShowComp1] = useState(true)\n  const [showComp2, setShowComp2] = useState(true)\n  const [showComp3, setShowComp3] = useState(true)\n  const [showComp4, setShowComp4] = useState(true)\n\n  return (\n    <div style={{margin: 'auto', maxWidth: '50vw', marginTop: '25vh'}}>\n      {showComp1 ? <RemovableText show={showComp1} setShow={setShowComp1} variant=\"p\" text=\"example paragraph\" /> : <div><button onClick={()=>setShowComp1(true)}>Show component 1</button></div>}\n      {showComp2 ? <RemovableText show={showComp2} setShow={setShowComp2}  variant=\"h4\" text=\"example h4\" /> : <div><button onClick={()=>setShowComp2(true)}>Show component 2</button></div>}\n      {showComp3 ? <RemovableText show={showComp3} setShow={setShowComp3} variant=\"p\" text=\"example paragraph\" /> : <div><button onClick={()=>setShowComp3(true)}>Show component 3</button></div>}\n      {showComp4 ? <RemovableText show={showComp4} setShow={setShowComp4}  variant=\"h4\" text=\"example h4\" /> : <div><button onClick={()=>setShowComp4(true)}>Show component 4</button></div>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}